@using Microsoft.AspNetCore.Identity
@using VfA.DataAccess.Repository.IRepository

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@inject IUserClaimsService userClaimsService

@if (User.Identity?.IsAuthenticated == true)
{
    var _user = userClaimsService.GetUserClaims();
    <li class="nav-item">
        <a id="inbox" class="nav-link " href="/Inbox" title="Manage">Inbox</a>
    </li>
    <li class="dropdown">
        <a href="#"><span>Hello @_user.Name</span> <i class="bi bi-chevron-down"></i></a>
        <ul>
            <li><a href="/Payment">Payment Settings</a></li>
            <li><a asp-area="Identity" asp-page="/Account/Manage/Index" >Manage</a></li>
            <li>
                <form id="logoutForm" class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                    <a id="logout" href="javascript:logoutUser();" class="nav-link btn btn-link border-0">Logout</a>
                </form>
            </li>
        </ul>
    </li>
}
else
{
    <li>
        <a asp-area="Identity" asp-page="/Account/RegisterMember">Register</a>
    </li>
    <li>
        <a class="getstarted" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
